(()=>{function a(e){let t=e.getBoundingClientRect();return t.bottom>0&&t.right>0&&t.left<(window.innerWidth||document.documentElement.clientWidth)&&t.top<(window.innerHeight||document.documentElement.clientHeight)}function o(e){e.hasAttribute("style")&&e.style.backgroundImage?e.style.backgroundImage=`url(${e.dataset.lazy})`:e.hasAttribute("src")&&(e.src=e.dataset.lazy),e.removeAttribute("data-lazy")}function l(e,t){e.forEach(n=>{n.isIntersecting&&(o(n.target),n.target.classList.add("lazy-background-on"),t.unobserve(n.target))})}function c(e){o(e),e.classList.remove("lazy-background"),e.classList.add("lazy-background-failed")}function d(){let e=document.querySelectorAll("[data-lazy]");if("IntersectionObserver"in window&&"MutationObserver"in window){let t=new IntersectionObserver(l);e.forEach(s=>{t.observe(s)}),new MutationObserver(s=>{for(let i of s)i.type==="childList"&&i.addedNodes.forEach(r=>{r.nodeType===1&&r.matches("[data-lazy]")&&(a(r)?o(r):t.observe(r))})}).observe(document.body,{childList:!0,subtree:!0})}else e.forEach(t=>{c(t)})}d();})();
